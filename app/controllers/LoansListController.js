 // ==========================================================================
// The M-Project - Mobile HTML5 Application Framework
// Generated with: Espresso 
//
// Project: KivaApp
// Controller: LoansListController
// ==========================================================================

KivaApp.LoansListController = M.Controller.extend({
	
	loans_list: null
	,loans: null
	,filter_selections: null

	
	,init: function(isFirstLoad){

		// The M Project has not router. As this is the app home page, this is where we do the check for an OAuth callback
		if (location.href.match(/\?oauth/i)) {
			var match = location.href.match(/oauth_verifier=([^&]+)(&|$)/);
			oauth_verifier = (match ? match[1] : "");
			if (oauth_verifier) {
				KivaApp.SettingsController.connectCallback(oauth_verifier);
			} else {
				alert('Error connecting');
			}
		}


	//	KivaApp.Tabs.activeTab =  NO;
	//	KivaApp.Tabs.lendTab.isActive = YES;

		var current_page = [M.ViewManager.currentPage, KivaApp.Tabs.lendTab];	
		//set the basket to empty - can change if need be
		if(isFirstLoad){
			KivaApp.LoanItemController.set('basket_num', 0);	
			KivaApp.FlowController.set('history_stack', new Array());
			KivaApp.FlowController.history_stack.push(current_page);
			console.log(KivaApp.FlowController.history_stack);
			M.ViewManager.currentPage.header.back.setCssProperty('visibility', 'hidden');
			
		} else if (KivaApp.FlowController.history_stack.length > 1) {
			KivaApp.FlowController.buildStack(current_page);
			M.ViewManager.currentPage.header.back.setCssProperty('visibility', 'visible');
		} else {
			KivaApp.FlowController.history_stack.push(current_page);		
			M.ViewManager.currentPage.header.back.setCssProperty('visibility', 'hidden');
		}

		
		//create a loans object
		this.loans = kiva.Loans.create();
		var _this = this;

		var selection_hash = this.filter_selections
		// if this page is being generated by the filterpage, the
		//selection_hash will have key-value pairs based on the user's choices
		
		//3/12/13 - filter selection should persist select filter - later...
		if(selection_hash!=null){

			var set_params = new String();
			for (var filter_type in selection_hash){
	            var filter_choices = selection_hash[filter_type];
	            //going through each choice in the filter
	            // need to make sure that each choice is included
	            
	            for (var c in filter_choices){
	                var choice  = filter_choices[c].value;           

	            	var param ='"'+ filter_type+'"' + ": " +'"' +choice+'"';
	            	if(set_params.length == 0){
	            		set_params = param;
	            	} else {
	            		set_params += ", "+param
	            	}
	            }
	           
	        }
	        set_params = "{" + set_params + "}";

	        var use_params = $.parseJSON(set_params);
	        //part string to be able to pass as JSON object

          	var loansjQXhr = _this.loans.fetch({action: 'search', params: use_params });

	        loansjQXhr.done(function () {
	            _this.set('loans_list', _this.loans.members);
	        }); 

		} else {		
			// local variable consisting of twenty newest loans in loans object
			var loansjQXhr = _this.loans.fetch({action: 'newest'})
			//setting loans_list variable declared at top to be the twenty newest loans
			console.log('***************************88');
          	console.log(loansjQXhr);
			loansjQXhr.done(function () {
				KivaApp.LoansListController.set('loans_list', KivaApp.LoansListController.loans.members);
			});
		}
	}
	
	//function for when user selects an object from the loans list
	,listObjectClicked: function(id, nameid){
		//the id is the loan object from teh list's DOM id
		// nameid is the loan id that is used to find it in kiva
		//saving this in local storage so that it can be retrieved later in LoanItemController
		//put toString to make sure that it is sent in correct format
		var nm= kv.phoneGap.localStorage.aes.setItem('name_id', nameid.toString());
		//go to LoanItem page which will access the variable saved above to show the details of teh selected loan
	//	KivaApp.FlowController.history_stack.push(M.ViewManager.currentPage);
	//	console.log(KivaApp.FlowController.history_stack);
		this.switchToPage('loanItem');

		// could probably use carousel view to make the individual pages look better, but would have to do this in the controller not the view
   }
	,goToFilter : function(){
    	this.switchToPage('filterPage');
	}
});
